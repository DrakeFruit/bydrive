@using Sandbox.UI;
@using System.Collections.Generic;
@inherits PanelComponent
@namespace Bydrive

<root>
	<div class="title">Results</div>
	<div class="list">
		@if(results != null)
		{
			@foreach (var result in results)
			{
				<div class="racer">
					<label class="placement @GetPlacementTag(result.Placement)">@result.Placement</label>
					<label class="name">@result.Participant.DisplayName</label>
					<label class="time">@result.Time.FormatAsRaceTime()</label>
				</div>
			}
		}
	</div>
	
</root>

@code
{
	IEnumerable<RaceManager.ParticipantFinishInformation> results;
	protected override void OnUpdate()
	{
		bool draw = ShouldDraw();
		if(draw)
		{
			results = GetPlacements();
			AddClass("visible");
			Panel.StateHasChanged();
		}
		else
		{
			SetClass("visible", false);
		}
	}

	private bool ShouldDraw()
	{
		return Race != null && Race.IsFinished(GetLocalParticipantInstance());
	}

	private IReadOnlyList<RaceManager.ParticipantFinishInformation> GetPlacements()
	{
		//return Race.Participants
		return Race?.FinishedParticipants ?? default;
	}

	private string GetPlacementTag(int placement)
	{
		int lastPlace = Race?.LastPlace ?? 1;

		return placement switch
		{
			1 => "first",
			2 => "second",
			3 => "third",
			int p when p == lastPlace => "last",
			_ => "middle",
		};
	}

	

	/*
	public override int GetHashCode()
	{
		return HashCode.Combine(GetPlacements(), ShouldDraw());
	}
	*/
}