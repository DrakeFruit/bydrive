@using Sandbox.UI;
@using System.Collections.Generic;
@inherits PanelComponent
@namespace Bydrive

@if (!ShouldDraw())
	return;

<root>
	<div class="title">Results</div>
	<div class="list">
		@if(GetPlacements() != null)
		{
			@foreach (var result in GetPlacements())
			{
				<div class="racer">
					<label class="placement @GetPlacementTag(result.Placement)">@result.Placement</label>
					<label class="name">@result.Participant.DisplayName</label>
					<label class="time">@result.Time.FormatAsRaceTime()</label>
				</div>
			}
		}
	</div>
	<div class="button" @onclick=@OnClickNext>Back to Menu</div>
</root>

@code
{
	private bool ShouldDraw()
	{
		return Race != null && Race.IsFinished(GetLocalParticipantInstance());
	}

	private IReadOnlyList<RaceManager.ParticipantFinishInformation> GetPlacements()
	{
		//return Race.Participants
		return Race?.FinishedParticipants ?? default;
	}

	private string GetPlacementTag(int placement)
	{
		int lastPlace = Race?.LastPlace ?? 1;

		return placement switch
		{
			1 => "first",
			2 => "second",
			3 => "third",
			int p when p == lastPlace => "last",
			_ => "middle",
		};
	}

	private void OnClickNext()
	{
		RaceContext.Stop();
	}

	protected override int BuildHash() => HashCode.Combine(GetPlacements(), GetPlacements().Count, ShouldDraw());
}